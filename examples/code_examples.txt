async def process_start_command(message: Message):
    await message.answer('Привет!')


async def process_help_commands(message: Message):
    await message.answer('Напиши мне что-нибудь и в ответ я пришлю тебе твое сообщение')


async def send_photo_echo(message: Message):
    await message.reply_photo(message.photo[0].file_id)


async def send_video_echo(message: Message):
    await message.answer_video(message.video.file_id)


async def send_video_note_echo(message: Message):
    await message.answer_video_note(message.video_note.file_id)


async def send_sticker_echo(message: Message):
    await message.answer_sticker(message.sticker.file_id)


async def send_audio_echo(message: Message):
    await message.answer_audio(message.audio.file_id)


async def send_voice_echo(message: Message):
    await message.answer_voice(message.voice.file_id)


async def send_file_echo(message: Message):
    await message.answer_document(message.document.file_id)


async def send_echo(message: Message):
    await message.reply(text=message.text)


dp.message.register(process_start_command, Command(commands='start'))
dp.message.register(process_help_commands, Command(commands='help'))
dp.message.register(send_photo_echo, F.photo)
dp.message.register(send_video_echo, F.video)
dp.message.register(send_video_note_echo, F.video_note)
dp.message.register(send_sticker_echo, F.sticker)
dp.message.register(send_audio_echo, F.audio)
dp.message.register(send_voice_echo, F.voice)
dp.message.register(send_file_echo, F.document)
dp.message.register(send_echo)


def my_start_filter(message: Message) -> bool:
    return message.text == '/start'

# Этот хэндлер будет срабатывать на команду "/start"
@dp.message(my_start_filter)
async def process_start_command(message: Message):
    await message.answer(text='Это команда /start')


# send message
updates = requests.get(f'{API_URL}{TOKEN}/getUpdates?offset={offset + 1}').json()
if updates['result']:
    print('New updates:', len(updates['result']))
    for i, result in enumerate(updates['result']):
        offset = result['update_id']
        chat_id = result['message']['from']['id']
        requests.get(f'{API_URL}{TOKEN}/sendMessage?chat_id={chat_id}&text={TEXT}')

# download file
@dp.message(F.document)
async def document_loader(message: Message):
    doc = message.document
    file_name, file_id = doc.file_name, doc.file_id
    try:
        destination = os.path.join(config['save_dir'], file_name)
        # method 1
        await bot.download(file_id, destination)
        # method 2
        # Получение пути к файлу на сервере TG ->
        # -> file_id='B..' file_unique_id='A..' file_size=9.. file_path='documents/..'
        file = await bot.get_file(file_id)
        # Загрузка файла
        await bot.download_file(file.file_path, destination)

